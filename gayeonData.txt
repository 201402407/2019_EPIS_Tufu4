**
** ** ** ** ** ** * 다 만들면 체크해 주세요!! ** ** ** ** ** ** ** *

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

NewReservationListData: ID값을 통해 신규 예약한 명단 리스트를 출력

이름과 예약 등록 날짜만 반환!

  Uri-- - > /getNewtReservationListData
Parm-- - > {
  "user": {
    "id": "test",
    "state": 1
  }
}
전송
Result-- - > {
  "result": {
    "internal": [{"name": "김가연","time": "2019-06-24"}, {"name": "정지원","time": "2019-05-22"}],
    "external": [{"name": "김가연","time": "2019-06-24"}, {"name": "정지원","time": "2019-05-22"}],
    "dogtag": [{"name": "김가연","time": "2019-06-24"}, {"name": "정지원","time": "2019-05-22"}]
  }
}
결과 값

  ps.결과값: result Object 안에 JSONArray: internal, external, dogtag 세개 넣어서!!

  CHECK

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

ReservationData: ID, 주인 이름, type 값을 통해 예약 데이터 요청

type - > 1: 내장형 / 2: 외장형 / 3: 등록인식표

Uri-- - > /getReservationData
Parm-- - > {
  "user": {
    "id": "test",
    "OWNER_NAME": "김가연",
    "type": 1
  }
}
전송
Result-- - > {
  "result": {
    "OWNER_NAME": "김가연",
    "OWNER_RESIDENT": "960708-2",
    "OWNER_PHONE_NUMBER": "010-4491-0778",
    "OWNER_ADDRESS1": "대전",
    "OWNER_ADDRESS2": "궁동",
    "PET_NAME": "뿡이",
    "PET_VARIETY": "시츄",
    "PET_COLOR": "흰색+갈색",
    "PET_GENDER": "남",
    "PET_NEUTRALIZATION": "했움",
    "PET_BIRTH": "2008-04-04",
    "ASK_DATE": "2008-04-04",
    "ETC": "겁이 많아요ㅠㅠ"
  }
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

ReservationCheck: ID, 주인 이름, type 값을 통해 해당 데이터 상태를 등록 대기 상태로 변경

type - > 1: 내장형 / 2: 외장형 / 3: 등록인식표

변경 성공하면 - > int 1
변경 실패하면 - > int 0

id / name / type이 일치하는 데이터의 state를 1 에서 2 로 변경!

Uri-- - > /putChangeState
Parm-- - > {
  "user": {
    "id": "test",
    "name": "김가연",
    "type": 1
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

CHECK

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

CallReservation: 병원 ID, 주인 이름, 강아지 이름 값을 통해 주인 전화번호 요청 & 예약상태 DB 변경

예약상태 3 으로 변경(현재: 2)

Uri-- - > /putChangeWait
Parm-- - > {
  "user": {
    "id": "test",
    "owner": "김가연",
    "animal": "뿡이"
  }
}
전송
Result-- - > {
  "result": "010-4491-0778"
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

WaitReservationListData: ID값을 통해 등록 대기 명단 리스트를 출력

state 2 와 state 3 상태의 리스트 요청

주인 이름과 반려 동물 이름만 반환!

  Uri-- - > /getWaitReservationListData
Parm-- - > {
  "user": {
    "id": "test"
  }
}
전송
Result-- - > {
  "result": {
    "wait": [{
      "owner": "김가연",
      "animal": "뿡이"
    }, {
      "owner": "정지원",
      "animal": "맥북"
    }]
  }
}
결과 값

ps.결과값: result Object 안에 JSONArray: wait 넣어서!!

CHECK

  -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

ReservationInfoData: ID, 주인 이름, 강아지 이름 값을 통해 예약 데이터 요청

Uri-- - > /getReservationInfoData
Parm-- - > {
  "user": {
    "id": "test",
    "owner": "김가연",
    "animal": "뿡이"
  }
}
전송
Result-- - > 결과 값 {
  "result": {
    "owner": "김가연",
    "resident": "960708-2",
    "phone": "010-4491-0778",
    "resAddr": "대전",
    "nowAddr": "궁동",
    "animal": "뿡이",
    "variety": "시츄",
    "furColor": "흰색+갈색",
    "gender": "남",
    "neutralization": "했움",
    "birthday": "2008-04-04",
    "acqDate": "2008-04-04",
    "special": "겁이 많아요ㅠㅠ"
  }
}

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

HospitalData: ID 값을 통해 해당되는 병원 메인 페이지에 필요한 모든 데이터 요청

필요 데이터: 병원 이름, 신규 예약 건수, 등록 대기 건수, 등록 완료 건수

Uri-- - > /getHospitalData
Parm-- - > {
  "user": {
    "id": "test"
  }
}
전송
Result-- - > {
  "result": {
    "name": "병원이름",
    "new": 3,
    "wait1": 1,
    "wait2": 2,
    "finish": 10,
    "profile": ""
  }
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

profileDB: 프로필 사진 db에 저장
저장 성공 - > int 1
저장 실패 - > int 0

Uri-- - > /putProfile
Parm-- - > {
  "user": {
    "id": "test",
    "profile": "두개 중 니가 가능한 방식으로 넣어서 보내주겠음!"
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

loginDB: 로그인

로그인 성공 - > int 1
로그인 실패 - > int 0

Uri-- - > /getLogin
Parm-- - > {
  "user": {
    "id": "test",
    "pw": "0000"
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

IDCheck: 중복된 ID 값이 있는지 체크

ID 중복이 있으면 - > int 1
ID 중복이 없으면 - > int 2
Default(에러 체크 하려고 만들었음) - > int 0

Uri-- - > /getIdCheck
Parm-- - > {
  "user": {
    "id": "test"
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

JoinDB: 회원가입

회원가입 성공하면 - > int 1
회원가입 실패하면 - > int 0

Uri-- - > /getJoin
Parm-- - > {
  "user": {
    "hospital": "병원이름",
    "name": "김가연",
    "number": "010-4491-0778",
    "id": "test",
    "pw": "1234"
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

#### HOSPITALINFO_TB 에서 SIGNUP_APP = 1 로 바꿔줘야한다####

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

ThreeCheck: 병원 명, 대표자 명, 전화번호가 같은지 확인

파라미터와 DB 내용이 모두 같으면 - > int 1
파라미터와 DB 내용이 다르면 - > int 2
Default(에러 체크 하려고 만들었음) - > int 0

Uri-- - > /getThreeCheck
Parm-- - > {
  "user": {
    "hospital": "미리내동물병원",
    "name": "김가연",
    "number": "031-574-7580"
  }
}
전송
Result-- - > {
  "result": 1
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --

HospitalName: ID 값을 통해 해당되는 병원 이름 요청

Uri-- - > /getHospitalName
Parm-- - > {
  "user": {
    "id": "test"
  }
}
전송
Result-- - > {
  "result": "병원이름"
}
결과 값

CHECK

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --