2019.06.13
- firebase 그대로 놔둠
- node.js의 express 이용해서 서버 구축.
- mysql 이용해서 데이터베이스 구축.
 -> DB 정보

    host: 'localhost',
    user: 'test',
    password: '',
    port: 3306,
    database: 'PET_REGIST'
    
    table: 'AGENCY_TB'

    /*
        AGENCY_TB_PK: int(11),
        ADDRESS1: varchar(80),
        ADDRESS2: varchar(50),
        CEO_NAME: varchar(10),
        AGENCY_NAME: varchar(20),
        PHONE_NUMBER: varchar(15)
    */
 -> json 형식으로 읽음
 --> JSONParse 자바 라이브러리 추가해서 json 편하게 읽어오고싶다..
- TempActivity에서 test 완료.
 -> READ DB 버튼 클릭하면 데이터 불러와서 보여줌
- 서버 구동 : server/npm start (node index.js 명령 링크되어 있는 명령)
- 데이터베이스 로그인 : mysql -utest (pw 없고 권한 DBA)

2019.06.16
- DB 테이블 수정
 ->
    /*
        ID: varchar(20)   -> PK
        PW: varchar(30)
        CEO_NAME: varchar(10)
        AGENCY_NAME: varchar(20)
        PHONE_NUMBER: varchar(15)
        ADDRESS1: varchar(80)
        ADDRESS2: varchar(50)
        SIGNUP_APP: tinyint(1)      tinyint(boolean)
    */
- VPN 설정
 -> L2TP
    server : 201502119@iptime.org
    계정 : jiwon / gayeon / haewon
    비밀번호 0000
    공유비밀 0000
- 쿼리문 변경 (CEO_NAME -> CEO_NAME or AGENCY_NAME)

2019.06.17
- DB 테이블 수정
 -> AGENCY_TB -> HospitalInfo_TB + USER_TB
    /*
        - HospitalInfo_TB
        
        HOSPITAL_KEY: int   -> PK
        CEO_NAME: varchar(10) NOT NULL
        HOSPITAL_NAME: varchar(20) NOT NULL
        PHONE_NUMBER: varchar(15) DEFAULT NULL
        ADDRESS1: varchar(80) DEFAULT NULL
        ADDRESS2: varchar(50) DEFAULT NULL
        SIGNUP_APP: tinyint(1) NOT NULL DEFAULT 0

        - USER_TB
        
        ID: varchar(20)   -> PK
        PW: varchar(30) NOT NULL
        HOSPITAL_KEY: varchar(20) NOT NULL   -> FK (HospitalInfo_TB.HOSPITAL_KEY)
        
    */

2019.06.19
- DB 테이블 수정
    /*
        - HospitalInfo_TB
        
        HOSPITAL_KEY: int   -> PK
        CEO_NAME: char(30) NOT NULL
        HOSPITAL_NAME: char(50) NOT NULL
        PHONE_NUMBER: char(15) DEFAULT NULL
        ADDRESS1: char(80) DEFAULT NULL
        ADDRESS2: char(50) DEFAULT NULL
        SIGNUP_APP: tinyint(1) NOT NULL DEFAULT 0
    */
 -> 생각보다 업체가 많아서 varchar -> char + 길이 늘림.
- DB init 완료
 -> 엑셀 파일 첨부파일로 넣으면 바로 DB 업데이트 가능.
 -> 대표자명과 업체명 검색해서 보내주는 메소드 구현.

2019.06.21
- DB 테이블 수정 
 -> RESERVATION_TB 추가
    /*
        - USER_TB
        
        ID: varchar(20)   -> PK
        PW: varchar(30) NOT NULL
        HOSPITAL_KEY: varchar(20) NOT NULL   -> FK (HospitalInfo_TB.HOSPITAL_KEY)
        HOSPITAL_NAME: char(50) NOT NULL


        - RESERVATION_TB

        INDEX: int auto_increment   -> PK
        // 병원 정보 //
        ID: char(20) NOT NULL
        HOSPITAL_KEY: int   -> FK (HospitalInfo_TB.HOSPITAL_KEY)
        
        // 예약 정보 //
        OWNER_NAME: char(30) NOT NULL
        ADDRESS: char(120)
        PHONE_NUMBER: char(15)
        PET_NAME: char(30) NOT NULL
        RACE: char(30) NOT NULL
        PET_COLOR: char(15)
        PET_BIRTH: char(20)
        NEUTRALIZATION: int NOT NULL
        PET_GENDER: int NOT NULL
        
        // 예약 확인 //
        CONFIRM: int DEFAULT 0
    */
 -> 병원명과 코드가 같이 있는 게 효율적일거라 생각.
- 회원가입, ID -> 병원명 등 메소드 구현.

2019.06.22
- 클라이언트로 한번에 값이 안 보내지는 오류 수정.
 -> mysql2/promise 의 query메소드가 끝나지 않음. 동기적으로 사용하면 이후 코드 실행 x.
    이후 하나씩 계속 밀려서 결과값이 보내지던 오류.
 --> 각 post마다 메소드 하나씩 만들어서 깔끔하게 분리했던 거 그냥 안으로 다 넣어버림.
 ---> 중복되는 코드 너무 많아서 코드 리팩토링 필요. (사용했던 함수 지우지 않고 주석처리, but 이전 함수들도 결과 처리 방식 리팩토링 필요.)

2019.06.24
- DB 테이블 수정 
 -> RESERVATION_TB 칼럼 변경
    /*
        - RESERVATION_TB

        INDEX: int auto_increment   -> PK
        // 병원 정보 //
        ID: char(20) NOT NULL
        HOSPITAL_KEY: int   -> FK (HospitalInfo_TB.HOSPITAL_KEY)
        
        // 예약 정보 //
        TYPE: int DEFAULT 0
        OWNER_NAME: char(30) NOT NULL
        ADDRESS: char(120)
        PHONE_NUMBER: char(15)
        PET_NAME: char(30) NOT NULL
        RACE: char(30) NOT NULL
        PET_COLOR: char(15)
        PET_BIRTH: char(20)
        NEUTRALIZATION: int NOT NULL
        PET_GENDER: int NOT NULL
        
        // 예약 확인 //
        REGIST_STATE: int DEFAULT 0
    */

2019.06.25
- DB 테이블 수정 
 -> USER_TB 추가
    /*
        - USER_TB
        
        ID: varchar(20)   -> PK
        PW: varchar(30) NOT NULL
        HOSPITAL_KEY: varchar(20) NOT NULL   -> FK (HospitalInfo_TB.HOSPITAL_KEY)
        HOSPITAL_NAME: char(50) NOT NULL
        PROFILE: varchar(20000) DEFAULT NULL
    */